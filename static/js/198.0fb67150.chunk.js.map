{"version":3,"file":"static/js/198.0fb67150.chunk.js","mappings":"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","sources":["redux/categories/categoriesSelectors.js","helpers/transformDate.js","components/TransactionTable/TransactionsTable.styled.jsx","components/TransactionTable/TransactionTable.jsx","webpack://wallet-app/./src/components/ModalAddTransaction/ModalAddTransaction.module.css?40ee","components/ModalAddTransaction/ModalAddTransaction.jsx","components/AddTransaction/AddTransactionBtn.styled.js","components/AddTransaction/AddTransactionBtn.jsx","components/EditModal/EditModal.styled.jsx","components/EditModal/EditModal.jsx","pages/HomePage/HomePage.styled.jsx","components/NoTable/Watermelon.styled.js","components/NoTable/Watermelon.jsx","components/NoTable/NoTable.styled.js","components/NoTable/NoTable.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const selectCategories = state => state.categories.items;\nexport const selectIsLoading = state => state.categories.isLoading;\nexport const selectError = state => state.categories.error;\n","export const transformDate = date => {\n  const dateString = new Date(date);\n  const day = dateString.getDate().toString().padStart(2, '0');\n  const month = (dateString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateString.getFullYear().toString().slice(2);\n\n  return `${day}.${month}.${year}`;\n};\n\nexport const switchColor = ({ type, theme: { colors } }) => {\n  switch (type) {\n    case 'INCOME':\n      return colors.btGreen;\n    case 'EXPENSE':\n      return colors.btPink;\n    default:\n      return colors.black;\n  }\n};\n\nexport const chooseBtnColor = p => {\n  if (p.edit) {\n    return 'transparent';\n  }\n  return p.red ? p.theme.colors.btPink : p.theme.colors.btGreen;\n};\n\nexport const chooseTextAlign = ({ textAlign }) => {\n  switch (textAlign) {\n    case 'left':\n      return 'left';\n    case 'right':\n      return 'right';\n    default:\n      return 'center';\n  }\n};\n","import styled from 'styled-components';\nimport {\n  chooseTextAlign,\n  switchColor,\n  chooseBtnColor,\n} from 'helpers/transformDate';\n\nexport const FixedHeadWrapper = styled.div`\n  position: relative;\n  @media screen and (min-width: 768px) {\n    padding-top: 58px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 320px;\n  overflow: hidden scroll;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 715px;\n    max-height: 65vh;\n  }\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.bgGrayRight};\n    border-radius: 2px;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: ${p => p.theme.ff.familyExo};\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    text-align: center;\n  }\n`;\n\nexport const TableHead = styled.ul`\n  display: flex;\n  position: absolute;\n  width: calc(100% + 10px);\n  top: 0;\n  left: -5px;\n  border-radius: 30px;\n  background-color: ${p => p.theme.colors.white};\n`;\n\nexport const TableHeading = styled.li`\n  border: none;\n\n  text-align: ${p => (p.left ? 'left' : 'center')};\n\n  padding: 16px 10px;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  &:nth-child(1) {\n    width: 80px;\n  }\n  &:nth-child(2) {\n    width: 70px;\n  }\n  &:nth-child(3) {\n    width: 135px;\n  }\n  &:nth-child(4) {\n    width: 130px;\n  }\n  &:nth-child(5),\n  &:nth-child(6) {\n    width: calc((100% - 460px) / 2);\n  }\n  &:last-child {\n    width: 40px;\n    padding-right: 20px;\n  }\n`;\n\nexport const TrData = styled.tr`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n    background-color: ${p => p.theme.colors.white};\n    border-radius: 10px;\n    border-left: 5px solid ${switchColor};\n  }\n\n  position: relative;\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      &::after {\n        content: '';\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        border: 1px solid #dcdcdf;\n        box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n      }\n    }\n  }\n`;\n\nexport const StyledTd = styled.td`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-grow: 1;\n    width: 100%;\n    align-items: center;\n    &:not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n  }\n  justify-content: space-between;\n\n  padding: 8px 10px;\n  height: 52px;\n  line-height: calc(18 / 16);\n  color: ${switchColor};\n  font-weight: ${p => (p.type ? '700' : '400')};\n  text-align: ${chooseTextAlign};\n  font-size: 16px;\n  @media screen and (min-width: 768px) {\n    &:nth-child(1) {\n      width: 75px;\n    }\n    &:nth-child(2) {\n      width: 70px;\n    }\n    &:nth-child(3) {\n      width: 135px;\n    }\n    &:nth-child(4) {\n      width: 130px;\n    }\n    &:last-child {\n      width: 40px;\n      padding-right: 5px;\n    }\n  }\n`;\n\nexport const DataHeading = styled.span`\n  color: ${p => p.theme.colors.black};\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const DataValue = styled.span`\n  @media screen and (max-width: 767px) {\n    text-align: end;\n  }\n  display: block;\n  white-space: nowrap;\n  max-width: 110px;\n  max-height: 36px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Button = styled.button`\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n  padding: 3px 5px;\n  border: none;\n  border-radius: 6px;\n  color: ${p => (p.edit ? 'gray' : p.theme.colors.white)};\n  background-color: ${chooseBtnColor};\n  transition: box-shadow 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover,\n  &:focus {\n    box-shadow: 0px 2px 6px ${chooseBtnColor};\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import { useMedia } from 'react-use';\nimport { useDispatch } from 'react-redux';\nimport { MdDelete, MdEdit } from 'react-icons/md';\nimport {\n  Table,\n  TableHeading,\n  TrData,\n  StyledTd,\n  DataHeading,\n  DataValue,\n  Wrapper,\n  Button,\n  TableHead,\n  FixedHeadWrapper,\n} from './TransactionsTable.styled';\nimport { transformDate } from 'helpers/transformDate';\nimport { deleteTransaction } from 'redux/transactions/transactionOperation';\n\nexport const TransactionTable = ({\n  transactions,\n  categories,\n  openEditModal,\n}) => {\n  const dispatch = useDispatch();\n  const isShown = transactions.length > 0 && categories.length > 0;\n  const isMobile = useMedia('(max-width: 767px)');\n  const isNoMobile = useMedia('(min-width: 768px)');\n  const sortedTransactions = [...transactions].sort(\n    (prevTr, nextTr) =>\n      Date.parse(nextTr.transactionDate) - Date.parse(prevTr.transactionDate)\n  );\n\n  return (\n    isShown && (\n      <FixedHeadWrapper>\n        {!isMobile && (\n          <TableHead>\n            <TableHeading>Date</TableHeading>\n            <TableHeading>Type</TableHeading>\n            <TableHeading left>Category</TableHeading>\n            <TableHeading left>Comment</TableHeading>\n            <TableHeading>Sum</TableHeading>\n            <TableHeading>Balance</TableHeading>\n            <TableHeading></TableHeading>\n          </TableHead>\n        )}\n        <Wrapper>\n          <Table>\n            <tbody>\n              {sortedTransactions.map(\n                ({\n                  id,\n                  transactionDate,\n                  type,\n                  categoryId,\n                  comment,\n                  amount,\n                  balanceAfter,\n                }) => (\n                  <TrData key={id} type={type}>\n                    <StyledTd>\n                      {isMobile && <DataHeading>Date</DataHeading>}\n                      {transformDate(transactionDate)}\n                    </StyledTd>\n                    <StyledTd>\n                      {isMobile && <DataHeading>Type</DataHeading>}\n                      {type === 'INCOME' ? '+' : '-'}\n                    </StyledTd>\n                    <StyledTd textAlign=\"left\">\n                      {isMobile && <DataHeading>Category</DataHeading>}\n                      {\n                        categories.find(category => category.id === categoryId)\n                          .name\n                      }\n                    </StyledTd>\n                    <StyledTd\n                      textAlign=\"left\"\n                      style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '5px',\n                      }}\n                    >\n                      {isMobile && <DataHeading>Comment</DataHeading>}\n                      <DataValue>{comment}</DataValue>\n                      {isNoMobile && (\n                        <Button\n                          aria-label=\"Edit\"\n                          type=\"button\"\n                          onClick={() =>\n                            openEditModal({\n                              id,\n                              transactionDate,\n                              type,\n                              categoryId,\n                              comment,\n                              amount,\n                            })\n                          }\n                          edit\n                        >\n                          <MdEdit />\n                        </Button>\n                      )}\n                    </StyledTd>\n                    <StyledTd type={type} textAlign=\"right\">\n                      {isMobile && <DataHeading>Sum</DataHeading>}\n                      {Math.abs(amount).toFixed(2)}\n                    </StyledTd>\n                    <StyledTd textAlign=\"right\">\n                      {isMobile && <DataHeading>Balance</DataHeading>}\n                      {balanceAfter.toFixed(2)}\n                    </StyledTd>\n                    <StyledTd>\n                      {isMobile && (\n                        <Button\n                          aria-label=\"Edit\"\n                          type=\"button\"\n                          onClick={() =>\n                            openEditModal({\n                              id,\n                              transactionDate,\n                              type,\n                              categoryId,\n                              comment,\n                              amount,\n                            })\n                          }\n                        >\n                          <MdEdit />\n                        </Button>\n                      )}\n                      <Button\n                        aria-label=\"delete\"\n                        type=\"button\"\n                        onClick={() => dispatch(deleteTransaction(id))}\n                        red\n                      >\n                        <MdDelete />\n                      </Button>\n                    </StyledTd>\n                  </TrData>\n                )\n              )}\n            </tbody>\n          </Table>\n        </Wrapper>\n      </FixedHeadWrapper>\n    )\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dateTime\":\"ModalAddTransaction_dateTime__C-03b\"};","import { GrClose } from 'react-icons/gr';\nimport { BsCalendar4Week } from 'react-icons/bs'; //BsBorder;\nimport styles from '../ModalAddTransaction/ModalAddTransaction.module.css';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { useState } from 'react';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { addTransaction } from 'redux/transactions/transactionOperation';\nimport { Button } from 'components/Button/Button';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport {\n  ModalTitle,\n  ModalForm,\n  InputCheckBox,\n  TypeLabel,\n  CheckBox,\n  CheckButton,\n  Plus,\n  Minus,\n  Span,\n  SpanIncome,\n  SpanExpense,\n  DivSumm,\n  Amount,\n  DateInput,\n  Comment,\n  ButtonCard,\n  CloseButton,\n  customStylesSelect,\n  Error,\n} from './ModalAddTransaction.styled';\nimport Select from 'react-select';\nimport { FormButton } from 'components/Forms/Forms.styled';\nimport { useMedia } from 'react-use';\nimport { selectBalance } from 'redux/transactions/transactionSelectors';\nimport { toast } from 'react-toastify';\nimport { toastStyled } from 'utils/GlobalStyle';\n\nexport const ModalAddTransaction = ({ onClose }) => {\n  const categories = useSelector(selectCategories);\n  const balance = useSelector(selectBalance);\n  const [transactionDate, setTransactionDate] = useState(new Date());\n  const [categoryId, setCategoryId] = useState('');\n  const dispatch = useDispatch();\n\n  const isMobile = useMedia('(max-width: 767px)');\n\n  const validationSchema = yup.object({\n    amount: yup\n      .number()\n      .typeError('Must be a number')\n      .moreThan(0, 'Please, enter number more than 0'),\n  });\n\n  const changeDate = date => {\n    setTransactionDate(date._d);\n  };\n  const changeCategory = categoryId => {\n    setCategoryId(categoryId.value);\n  };\n  const { handleSubmit, values, handleChange, errors, resetForm } = useFormik({\n    initialValues: {\n      type: false,\n      comment: '',\n      amount: '',\n    },\n    validationSchema,\n    onSubmit: ({ type, comment, amount }) => {\n      const newTransaction = {\n        transactionDate,\n        type: type ? 'EXPENSE' : 'INCOME',\n        categoryId: categoryId\n          ? categoryId\n          : '063f1132-ba5d-42b4-951d-44011ca46262',\n        comment,\n        amount: type ? -Number(amount) : Number(amount),\n      };\n      if (balance + newTransaction.amount < 0) {\n        toast.warn(\n          'Insufficient balance to complete the transaction!',\n          toastStyled\n        );\n        return;\n      }\n      dispatch(addTransaction(newTransaction));\n      resetForm();\n      onClose();\n    },\n  });\n\n  const selectOption = () =>\n    categories.reduce((acc, categori) => {\n      if (categori.type !== 'INCOME') {\n        acc.push({\n          value: `${categori.id}`,\n          label: `${categori.name}`,\n        });\n      }\n      return acc;\n    }, []);\n\n  const valid = function (current) {\n    return current.isBefore(new Date());\n  };\n\n  return (\n    <>\n      <ModalTitle>Add transaction</ModalTitle>\n      <ModalForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <TypeLabel>\n          {values.type ? <Span>Income</Span> : <SpanIncome>Income</SpanIncome>}\n          <InputCheckBox\n            type=\"checkbox\"\n            name=\"type\"\n            value={values.type}\n            onChange={handleChange}\n          />\n          <CheckBox>\n            <CheckButton props={values.type}>\n              {!values.type ? <Plus /> : <Minus />}\n            </CheckButton>\n          </CheckBox>\n          {!values.type ? (\n            <Span>Expense</Span>\n          ) : (\n            <SpanExpense>Expense</SpanExpense>\n          )}\n        </TypeLabel>\n        {values.type && (\n          <Select\n            name=\"categoryId\"\n            styles={customStylesSelect(isMobile)}\n            onChange={evt => {\n              changeCategory(evt);\n            }}\n            options={selectOption()}\n            required\n          ></Select>\n        )}\n        <DivSumm>\n          <div>\n            <Amount\n              type=\"text\"\n              placeholder=\"0.00\"\n              name=\"amount\"\n              value={values.amount}\n              onChange={handleChange}\n              required\n            />\n            {errors.amount && <Error>{errors.amount}</Error>}\n          </div>\n\n          <DateInput>\n            <Datetime\n              dateFormat=\"DD.MM.YY\"\n              timeFormat={false}\n              name=\"transactionDate\"\n              value={transactionDate}\n              onChange={evt => {\n                changeDate(evt);\n              }}\n              inputProps={{\n                className: styles.dateTime,\n              }}\n              closeOnSelect={true}\n              isValidDate={valid}\n            />\n            <BsCalendar4Week />\n          </DateInput>\n        </DivSumm>\n        <Comment\n          placeholder=\"Comment\"\n          name=\"comment\"\n          value={values.comment}\n          onChange={handleChange}\n        />\n        <ButtonCard>\n          <FormButton type=\"submit\">ADD</FormButton>\n          <Button type=\"button\" onClick={onClose}>\n            CANCEL\n          </Button>\n        </ButtonCard>\n        {!isMobile && (\n          <CloseButton type=\"button\" onClick={onClose}>\n            <GrClose />\n          </CloseButton>\n        )}\n      </ModalForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nexport const Icon = styled(AiOutlinePlus)`\n  width: 20px;\n  height: 20px;\n  fill: #fff;\n\n  transition: all 0.5s ease-in-out;\n`;\n\nexport const StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n\n  position: fixed;\n  right: 40px;\n  bottom: 40px;\n  width: 44px;\n  height: 44px;\n\n  background: #24cca7;\n\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n\n  transition: all 0.5s ease-in-out;\n\n  @media (max-width: 768px) {\n    right: 20px;\n    bottom: 20px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.3);\n    & svg {\n      transform: scale(1.3);\n    }\n  }\n`;\n","import { Icon, StyledBtn } from './AddTransactionBtn.styled';\n\nexport const AddTransactionBtn = ({ onClick, ...attrs }) => {\n  return (\n    <StyledBtn onClick={onClick} {...attrs}>\n      <Icon />\n    </StyledBtn>\n  );\n};\n","import styled from 'styled-components';\nimport { switchColor } from 'helpers/transformDate';\n\nexport const Category = styled.p`\n  color: ${switchColor};\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const TransactionData = styled.p`\n  font-size: 18px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Comment = styled.textarea`\n  resize: none;\n  width: 280px;\n  border: 0;\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n\n  font-family: ${p => p.theme.ff.familyExo};\n  font-weight: ${p => p.theme.fontWeight.fw4};\n  font-size: ${p => p.theme.fontSize.fs18};\n  line-height: 1.5;\n  outline: ${p => p.theme.borderColor.comment};\n  outline-offset: 2px;\n  border-radius: 2px;\n  transition: outline-color ${p => p.theme.transition};\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n    background-color: ${p => p.theme.colors.bgGray};\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.lBlue};\n    border-radius: 2px;\n  }\n  &:focus {\n    outline-color: ${p => p.theme.colors.lBlue};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { GrClose } from 'react-icons/gr';\nimport {\n  CloseButton,\n  ModalForm,\n  ModalTitle,\n} from 'components/ModalAddTransaction/ModalAddTransaction.styled';\n\nimport { updateTransaction } from 'redux/transactions/transactionOperation';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { Comment, Category, TransactionData } from './EditModal.styled';\nimport { Button } from 'components/Button/Button';\nimport { transformDate } from 'helpers/transformDate';\nimport { useMedia } from 'react-use';\n\nexport const EditModal = ({ transaction, close }) => {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const isMobile = useMedia('(max-width: 768px)');\n\n  const { handleSubmit, values, handleChange } = useFormik({\n    initialValues: {\n      comment: transaction.comment,\n    },\n    onSubmit: values => {\n      dispatch(updateTransaction({ ...transaction, ...values }));\n      close();\n    },\n  });\n  return (\n    <>\n      <ModalTitle>Edit comment</ModalTitle>\n      <Category type={transaction.type}>\n        {\n          categories.find(category => category.id === transaction.categoryId)\n            .name\n        }\n      </Category>\n      <TransactionData>\n        Date: {transformDate(transaction.transactionDate)}\n      </TransactionData>\n      <TransactionData>\n        Sum: {Math.abs(transaction.amount).toFixed(2)}\n      </TransactionData>\n      <ModalForm onSubmit={handleSubmit}>\n        <Comment\n          placeholder=\"Comment\"\n          name=\"comment\"\n          onChange={handleChange}\n          rows=\"4\"\n          value={values.comment}\n        >\n          {values.comment}\n        </Comment>\n\n        <Button type=\"submit\" primary>\n          UPDATE\n        </Button>\n        <Button type=\"button\" onClick={close}>\n          Cancel\n        </Button>\n        {!isMobile && (\n          <CloseButton type=\"button\" onClick={close} aria-label=\"close\">\n            <GrClose />\n          </CloseButton>\n        )}\n      </ModalForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 128px;\n  @media screen and (min-width: 768px) {\n    padding-top: 10px;\n  }\n  @media screen and (min-width: 1080px) {\n    padding-top: 46px;\n    padding-left: 69px;\n    flex-shrink: 0;\n    flex-grow: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n\n  /* display: flex;\n  flex-direction: column;\n    justify-content: center;\n    align-items: center; */\np {\n  position: absolute;\n  top: 125%;\n  left:51%;\n\n}\n\n`\n\n\nexport const Watermelon = styled.div`\n\tposition: absolute;\n\twidth: 100px;\n\theight: 100px;\n    /* top: 230px;\n    right: 550px; */\n    top: 60%;\n    left:45%;\n\n\n\n\n\n  div, i {\n  position: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tborder-radius: 100%;\n  }\n\n\n\tdiv:first-of-type {\n\t\tborder: 5.9em solid #00AD84;\n\t\tborder-top: 5.9em solid transparent;\n\t}\n\n\tdiv:nth-of-type(2) {\n\t\tborder: 5.7em solid #24CCA7; //00AD84\n\t\tborder-top: 5.7em solid transparent;\n\t}\n\n\tdiv:nth-of-type(3){\n\t\tborder: 5.2em solid #FDFAF7;\n\t\tborder-top: 5.2em solid transparent;\n\t}\n\n\tdiv:last-of-type {\n\t\tborder: 5em solid #ff6596;\n\t\tborder-top: 5em solid transparent;\n\n\n\t\ti:first-of-type {\n\t\t\ttop: 30px;\n\t\t\tleft: 15px;\n\t\t\ttransform: rotate(-12deg);\n\t\t}\n\n\t\ti:nth-of-type(2) {\n\t\t\ttop: 35px;\n\t\t\tleft: -20px;\n\t\t\ttransform: rotate(20deg);\n\t\t}\n\n\t\ti:nth-of-type(3) {\n\t\t\ttop: 10px;\n\t\t\tleft: 30px;\n\t\t\ttransform: rotate(100deg);\n\t\t}\n\n\t\ti:nth-of-type(4) {\n\t\t\tleft: 20px;\n\t\t\ttop: -5px;\n\t\t\ttransform: rotate(80deg);\n\t\t}\n\n\t\ti:nth-of-type(5) {\n\t\t\tleft: -45px;\n\t\t\ttransform: rotate(90deg);\n\t\t}\n\n\t\ti:nth-of-type(6), i:nth-of-type(7) {left: -30px;}\n\n\t\ti:nth-of-type(6) {\n\t\t\ttop: 15px;\n\t\t\ttransform: rotate(65deg);\n\t\t}\n\n\t\ti:nth-of-type(7) {\n\t\t\ttop: -15px;\n\t\t\ttransform: rotate(102deg);\n\t\t}\n\n\t\ti:nth-of-type(8) {\n\t\t\tleft: 35px;\n\t\t\ttop: -20px;\n\t\t\ttransform: rotate(75deg);\n\t\t}\n\n\t\ti:nth-of-type(9) {\n\t\t\tleft: -45px;\n\t\t\ttop: -30px;\n\t\t\ttransform: rotate(115deg);\n\t\t}\n\n\t\ti:last-of-type {\n\t\t\ttop: 15px;\n\t\t\tleft: -5px;\n    }\n\n    i {\n\tborder-top: 0.3em solid #626262;\n\tborder-bottom: 0.3em solid #626262;\n\tborder-left: 0.15em solid #626262;\n\tborder-right: 0.15em solid #626262;\n\tborder-radius: 0.15em / 0.3em;\n}\n  }\n\n  @keyframes gimme {\n\t0% \t {transform: translateY(-25px)}\n\t10%  {transform: translateY(-25px)}\n\t90%  {transform: translateY(0)}\n\t100% {transform: translateY(0)}\n}\n\n\n  `\n\nexport const Slice = styled.div`\n\tposition: absolute;\n\twidth: 100px;\n\theight: 100px;\n    top: 60%;\n    left:45%;\n\n\ttransform: translateY(-25px);\n\tanimation: gimme 2s ease-in-out infinite alternate;\n\n  div, i {\n    position: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tborder-radius: 100%;\n  }\n\n  i {\n\tborder-top: 0.3em solid #626262;\n\tborder-bottom: 0.3em solid #626262;\n\tborder-left: 0.15em solid #626262;\n\tborder-right: 0.15em solid #626262;\n\tborder-radius: 0.15em / 0.3em;\n}\n\n\tdiv {top: 50%}\n\n\tdiv:first-of-type {\n\t\tborder: 5.9em solid transparent;\n\t\tborder-top: 5.9em solid #00AD84;\n\t}\n\n\tdiv:nth-of-type(2) {\n\t\tborder: 5.7em solid transparent;\n\t\tborder-top: 5.7em solid #24CCA7;\n\t}\n\n\tdiv:nth-of-type(3) {\n\t\tborder: 5.2em solid transparent;\n\t\tborder-top: 5.2em solid #FDFAF7;\n\t}\n\n\tdiv:last-of-type {\n\t\tborder: 5em solid transparent;\n\t\tborder-top: 5em solid #ff6596;\n\n\t\ti:first-of-type {\n\t\t\ttop: -40px;\n\t\t\tleft: 15px;\n\t\t\ttransform: rotate(12deg);\n\t\t}\n\t\ti:nth-of-type(2) {\n\t\t\ttop: -45px;\n\t\t\tleft: -20px;\n\t\t\ttransform: rotate(-12deg);\n\t\t}\n\t\ti:nth-of-type(3) {\n\t\t\ttop: -50px;\n\t\t\tleft: 1px;\n\t\t\ttransform: rotate(6deg);\n\t\t}\n\n\t\ti:last-of-type {top: -20px}\n\t}\n\n  @keyframes gimme {\n\t0% \t {transform: translateY(-25px)}\n\t10%  {transform: translateY(-25px)}\n\t90%  {transform: translateY(0)}\n\t100% {transform: translateY(0)}\n}\n\n`;\n\n\n","import { Watermelon, Slice, Button } from './Watermelon.styled.js';\n\nexport const WatermelonDiv = ({ openModal }) => {\n  return (\n    <Button type=\"button\" onClick={openModal}>\n      <p>Add transaction</p>\n      <Watermelon>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n        </div>\n      </Watermelon>\n      <Slice>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div>\n          <i></i>\n          <i></i>\n          <i></i>\n          <i></i>\n        </div>\n      </Slice>\n    </Button>\n  );\n};\n","import styled from 'styled-components';\nimport loginBgImgTab from '../../images/background/loginBgImgTab.png';\nimport loginBgImgTabLarge from '../../images/background/loginBgImgTab@2x.png';\nimport loginBgImgDesk from '../../images/background/loginBgImgDesk.png';\nimport loginBgImgDeskLarge from '../../images/background/loginBgImgDesk@2x.png';\n\n\nexport const NoTable = styled.div`\n\np {\n    padding-left: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n  }\nfont-weight: ${p => p.theme.fontWeight.fw4};\n\n\n  @media screen and (max-width: 767px) {\n\n    }\n`;\n\nexport const Div = styled.div`\n  position: relative;\n\nwidth: 700px;\nheight: 250px;\n\n\n`;\n\n\nexport const NoTableSized = styled(NoTable)`\n\n  @media screen and (min-width: 768px) {\n    ::after {\n      content: '';\n      display: block;\n      width: 260px;\n      height: 250px;\n\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n\n      background-image: url(${loginBgImgTab});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgTabLarge});\n      }\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    ::after {\n      top: 150px;\n      left: 76px;\n      width: 435px;\n      height: 420px;\n\n      background-image: url(${loginBgImgDesk});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgDeskLarge});\n      }\n    }\n  }\n`;\n","import { WatermelonDiv } from './Watermelon.jsx';\nimport { NoTable, Div } from './NoTable.styled';\n\nexport const NoTableImg = ({ openModal }) => {\n  return (\n    <Div>\n      <WatermelonDiv openModal={openModal} />\n      <NoTable>\n        <p>Have you already bought Kherson`s watermelon?</p>\n      </NoTable>\n    </Div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTransaction } from 'redux/transactions/transactionSelectors';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { TransactionTable } from 'components/TransactionTable/TransactionTable';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useState } from 'react';\nimport { useMedia } from 'react-use';\nimport { Balance } from 'components/Balance/Balance';\nimport { AddTransactionBtn } from 'components/AddTransaction/AddTransactionBtn';\nimport { ModalWindowWraper } from 'components/ModalWindowWraper/ModalWindowWraper';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport { Wrapper } from './HomePage.styled';\nimport { NoTableImg } from 'components/NoTable/NoTable';\n\nconst HomePage = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [transactionToEdit, setTransactionToEdit] = useState(null);\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n  const isMobile = useMedia('(max-width: 767px)');\n  const transactions = useSelector(selectTransaction);\n  const categories = useSelector(selectCategories);\n\n  const closeEditModal = () => {\n    setTransactionToEdit(null);\n  };\n  const openEditModal = transaction => {\n    setTransactionToEdit(transaction);\n  };\n  const onClose = () => {\n    setModalIsOpen(false);\n    setTransactionToEdit(null);\n  };\n\n  return (\n    <Wrapper>\n      {isMobile && <Balance />}\n      {!(transactions.length > 0) && <NoTableImg openModal={openModal} />}\n      <TransactionTable\n        transactions={transactions}\n        categories={categories}\n        openEditModal={openEditModal}\n      />\n      <AddTransactionBtn type=\"button\" onClick={openModal}>\n        add transaction\n      </AddTransactionBtn>\n      {(modalIsOpen || transactionToEdit) && (\n        <ModalWindowWraper clickOnBackdrop={onClose}>\n          {modalIsOpen ? (\n            <ModalAddTransaction onClose={onClose} />\n          ) : (\n            <EditModal transaction={transactionToEdit} close={closeEditModal} />\n          )}\n        </ModalWindowWraper>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectCategories","state","categories","items","transformDate","date","dateString","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","switchColor","type","colors","theme","btGreen","btPink","black","chooseBtnColor","p","edit","red","FixedHeadWrapper","styled","Wrapper","bgGrayRight","Table","ff","familyExo","TableHead","white","TableHeading","left","TrData","StyledTd","textAlign","DataHeading","DataValue","Button","TransactionTable","transactions","openEditModal","dispatch","useDispatch","isShown","length","isMobile","useMedia","isNoMobile","sortedTransactions","sort","prevTr","nextTr","parse","transactionDate","map","id","categoryId","comment","amount","balanceAfter","find","category","name","style","display","alignItems","gap","onClick","Math","abs","toFixed","deleteTransaction","ModalAddTransaction","onClose","useSelector","balance","selectBalance","useState","setTransactionDate","setCategoryId","validationSchema","yup","typeError","moreThan","useFormik","initialValues","onSubmit","newTransaction","Number","toast","toastStyled","addTransaction","resetForm","handleSubmit","values","handleChange","errors","autoComplete","value","onChange","props","styles","customStylesSelect","evt","changeCategory","options","reduce","acc","categori","push","label","required","placeholder","dateFormat","timeFormat","_d","inputProps","className","closeOnSelect","isValidDate","current","isBefore","Icon","AiOutlinePlus","StyledBtn","AddTransactionBtn","attrs","Category","TransactionData","Comment","fontWeight","fw4","fontSize","fs18","borderColor","transition","bgGray","lBlue","EditModal","transaction","close","updateTransaction","rows","primary","Watermelon","Slice","WatermelonDiv","openModal","NoTable","Div","NoTableImg","loginBgImgTab","loginBgImgTabLarge","loginBgImgDesk","loginBgImgDeskLarge","modalIsOpen","setModalIsOpen","transactionToEdit","setTransactionToEdit","selectTransaction","Balance","ModalWindowWraper","clickOnBackdrop"],"sourceRoot":""}