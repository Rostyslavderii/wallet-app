{"version":3,"file":"static/js/683.bf8125a7.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","param","height","width","redraw","type","plugins","currentDataset","find","fallbackContent","updateMode","destroy","useEffect","config","setTimeout","update","canvas","dataset","role","Chart","forwardRef","createTypedChart","registerables","ref","register","Line","setOptions","LineController","Bar","value","map","nextDataset","BarController","Radar","RadarController","defaultDatasetIdKey","DoughnutController","current","reforwardRef","PolarArea","PolarAreaController","chart","nextOptions","Object","Scatter","assign","options","setLabels","currentData","nextLabels","noop","uid","id","isNullOrUndef","isArray","Array","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","target","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","get","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_element","afterInit","_args","afterDraw","_willRender","afterEvent","handleEvent","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}