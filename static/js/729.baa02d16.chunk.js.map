{"version":3,"file":"static/js/729.baa02d16.chunk.js","mappings":"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","sources":["helpers/transformDate.js","helpers/switchBgStatistic.js","components/Chart/Chart.jsx","components/StatisticTable/StatisticTable.styled.js","components/StatisticTable/StatisticTable.jsx","redux/transactionsSummary/trSummarySelectors.js","components/Diagram/Diagram.jsx","pages/StatisticPage/StatisticPage.jsx"],"sourcesContent":["export const transformDate = date => {\n  const dateString = new Date(date);\n  const day = dateString.getDate().toString().padStart(2, '0');\n  const month = (dateString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateString.getFullYear().toString().slice(2);\n\n  return `${day}.${month}.${year}`;\n};\n\nexport const switchColor = ({ type, theme: { colors } }) => {\n  switch (type) {\n    case 'INCOME':\n      return colors.btGreen;\n    case 'EXPENSE':\n      return colors.btPink;\n    default:\n      return colors.black;\n  }\n};\n","export const switchBgStatistic = ({ name, theme: { colors } }) => {\n    switch (name) {\n        case 'Main expenses':\n            return colors.yellow;\n        case 'Products':\n            return colors.lReddy;\n        case 'Car':\n            return colors.reddy;\n        case 'Self care':\n            return colors.lPurple;\n        case 'Child care':\n            return colors.lBlue;\n        case 'Household products':\n            return colors.btBlue;\n        case 'Education':\n            return colors.lBlight;\n        case 'Leisure':\n            return colors.lGreen;\n        case 'Entertainment':\n            return colors.btPink;\n        case 'Other expenses':\n            return colors.green;\n        default:\n            return colors.btBlue;\n    }\n};","import { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { switchBgStatistic } from 'helpers/switchBgStatistic';\nimport { useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport theme from 'utils/theme';\n// import { useSelector } from 'react-redux';\n// import { selectBalance } from 'redux/transactions/transactionSelectors';\n\nChartJS.register(ArcElement, Tooltip);\n\nexport const Chart = ({ trSummary }) => {\n    // const balance = useSelector(selectBalance);\n    const options = {\n        cutout: \"65%\"\n    }\n    const data = {\n        labels: [],\n        datasets: [\n            {\n                label: '# of Votes',\n                data: [],\n                backgroundColor: [],\n                borderColor: [\n                    'transparent',\n                ],\n            },\n        ],\n    };\n\n    useEffect(() => {\n        const chartInfoList = () => {\n            if (trSummary.categoriesSummary.length > 0) {\n\n                trSummary.categoriesSummary.forEach(({ name, type, total }) => {\n                    if (type === \"INCOME\") {\n                        return;\n                    }\n                    const bgColor = switchBgStatistic({ name, theme });\n                    const amount = Math.abs(total);\n                    const expence = Math.abs(trSummary.expenseSummary);\n                    data.datasets[0].backgroundColor.push(bgColor);\n                    data.labels.push(name);\n\n                    const totalTr = Math.round(amount / expence * 100);\n                    // console.log(\"totalTr\", totalTr);\n                    data.datasets[0].data.push(totalTr);\n                })\n            }\n        }\n\n        if (trSummary) {\n            chartInfoList()\n        }\n    }, [trSummary, data.datasets, data.labels])\n\n\n    return (\n        trSummary && <Doughnut redraw={true} options={options} data={data} height=\"288px\" width=\"288px\" />\n    )\n}\n","import styled from 'styled-components';\nimport { switchColor } from 'helpers/transformDate';\nimport { switchBgStatistic } from 'helpers/switchBgStatistic';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 320px;\n  overflow: visible scroll;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 46px;\n    margin-right: 0;\n    max-width: 715px;\n    max-height: 80vh;\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.bgGrayRight};\n    border-radius: 2px;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: ${p => p.theme.ff.familyExo};\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    text-align: center;\n  }\n`;\n\nexport const TableHeading = styled.th`\n  &:first-child {\n    border-radius: 30px 0 0 30px;\n  }\n  &:last-child {\n    border-radius: 0 30px 30px 0;\n  }\n  border: none;\n  background-color: ${p => p.theme.colors.white};\n  text-align: ${p => (p.left ? 'left' : 'center')};\n\n  padding: 16px 10px;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const TrData = styled.tr`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n    background-color: ${p => p.theme.colors.white};\n    border-radius: 10px;\n    border-left: 5px solid ${switchColor};\n  }\n\n  position: relative;\n  font-size: 16px;\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      &::after {\n        content: '';\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        border: 1px solid #dcdcdf;\n        box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n      }\n    }\n  }\n`;\n\nexport const StyledTd = styled.td`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    position: relative;\n    justify-content: space-between;\n    flex-grow: 1;\n    width: 100%;\n    align-items: center;\n    &:not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n  }\n  padding: 8px 10px;\n  padding-left: ${p => (p.name ? '40px' : '10px')};\n  height: 52px;\n  line-height: calc(18 / 16);\n  color: ${switchColor};\n  font-weight: ${p => (p.type ? '700' : '400')};\n  text-align: ${p => (p.left ? 'left' : 'center')};\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    display: ${p => (p.name ? 'block' : 'none')};\n    width: 24px;\n    height: 24px;\n    background-color: ${switchBgStatistic};\n    border-radius: 2px;\n  }\n`;\n\n\n","import {\n  Table,\n  TableHeading,\n  TrData,\n  StyledTd,\n  Wrapper,\n} from './StatisticTable.styled';\n\nexport const StatisticTabel = ({ handleChange, trSummary }) => {\n  return (\n    <>\n      <select onChange={handleChange} name=\"month\">\n        <option value=\"\" hidden>\n          Month\n        </option>\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n      </select>\n      <select onChange={handleChange} name=\"year\">\n        <option value=\"\" hidden>\n          Year\n        </option>\n        <option value=\"2022\">2022</option>\n        <option value=\"2023\">2023</option>\n      </select>\n\n      <Wrapper>\n        {trSummary ? (\n          <>\n            {trSummary.categoriesSummary.length > 0 ? (\n              <>\n                <Table>\n                  <thead>\n                    <tr>\n                      <TableHeading left>Category</TableHeading>\n                      <TableHeading>Sum</TableHeading>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {trSummary.categoriesSummary.reduce(\n                      (acc, { name, total, type }) => {\n                        if (type !== 'INCOME') {\n                          acc.push(\n                            <TrData key={name} type={type}>\n                              <StyledTd left name={name}>\n                                {name}\n                              </StyledTd>\n                              <StyledTd type={type}>\n                                {Math.abs(total).toFixed(2)}\n                              </StyledTd>\n                            </TrData>\n                          );\n                        }\n                        return acc;\n                      },\n                      []\n                    )}\n                  </tbody>\n                </Table>\n                <div>\n                  <div>\n                    <span>Expanses: </span>\n                    <span>{Math.abs(trSummary.expenseSummary).toFixed(2)}</span>\n                  </div>\n                  <div>\n                    <span>Incomes: </span>\n                    <span>{Math.abs(trSummary.incomeSummary).toFixed(2)}</span>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div>In this period you don't have any expances</div>\n            )}\n          </>\n        ) : (\n          <div>\n            Can you please put a month and year when you did a transactions\n          </div>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n","export const selectTrSummary = state => state.trSummary.summary;\nexport const selectIsLoading = state => state.trSummary.isLoading;\nexport const selectError = state => state.trSummary.error;\n","import { Chart } from 'components/Chart/Chart';\nimport { StatisticTabel } from 'components/StatisticTable/StatisticTable';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsSummary } from 'redux/transactionsSummary/trSummaryOperations';\nimport {\n  selectError,\n  selectTrSummary,\n} from 'redux/transactionsSummary/trSummarySelectors';\n\nexport const Diagram = () => {\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n\n  const trSummary = useSelector(selectTrSummary);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchTransactionsSummary = ({ month, year }) => {\n      dispatch(getTransactionsSummary({ month, year }));\n    };\n\n    if (month && year) {\n      fetchTransactionsSummary({ month, year });\n    }\n  }, [month, year, dispatch]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'month':\n        setMonth(value);\n        break;\n      case 'year':\n        setYear(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <Chart trSummary={trSummary} />\n        <StatisticTabel handleChange={handleChange} trSummary={trSummary} />\n      </div>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n","import { Diagram } from 'components/Diagram/Diagram';\n\nconst StatisticPage = () => {\n  return (\n    <>\n      <div>Statistic</div>\n      <Diagram />\n    </>\n  );\n};\n\nexport default StatisticPage;\n"],"names":["transformDate","date","dateString","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","switchColor","type","colors","theme","btGreen","btPink","black","switchBgStatistic","name","yellow","lReddy","reddy","lPurple","lBlue","btBlue","lBlight","lGreen","green","ChartJS","ArcElement","Tooltip","Chart","trSummary","data","labels","datasets","label","backgroundColor","borderColor","useEffect","categoriesSummary","length","forEach","total","bgColor","amount","Math","abs","expence","expenseSummary","push","totalTr","round","redraw","options","cutout","height","width","Wrapper","styled","p","bgGrayRight","Table","ff","familyExo","TableHeading","white","left","TrData","StyledTd","StatisticTabel","handleChange","onChange","value","hidden","reduce","acc","toFixed","incomeSummary","selectTrSummary","state","summary","selectError","error","Diagram","useState","setMonth","setYear","useSelector","dispatch","useDispatch","getTransactionsSummary","fetchTransactionsSummary","target"],"sourceRoot":""}