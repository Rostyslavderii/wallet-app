{"version":3,"file":"static/js/857.45b37f61.chunk.js","mappings":"yNAAaA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,KAArB,E,iDCAxBC,EAAgB,SAAAC,GAC3B,IAAMC,EAAa,IAAIC,KAAKF,GACtBG,EAAMF,EAAWG,UAAUC,WAAWC,SAAS,EAAG,KAClDC,GAASN,EAAWO,WAAa,GAAGH,WAAWC,SAAS,EAAG,KAC3DG,EAAOR,EAAWS,cAAcL,WAAWM,MAAM,GAEvD,MAAM,GAAN,OAAUR,EAAV,YAAiBI,EAAjB,YAA0BE,EAC3B,EAEYG,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAeC,EAAe,EAAxBC,MAASD,OAC3C,OAAQD,GACN,IAAK,SACH,OAAOC,EAAOE,QAChB,IAAK,UACH,OAAOF,EAAOG,OAChB,QACE,OAAOH,EAAOI,MAEnB,ECfYC,EAAUC,EAAAA,QAAAA,IAAH,0dAoBI,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOQ,WAAnB,IAKZC,EAAQH,EAAAA,QAAAA,MAAH,oLAGD,SAAAC,GAAC,OAAIA,EAAEN,MAAMS,GAAGC,SAAf,IACP,SAAAJ,GAAC,OAAIA,EAAEN,MAAMD,OAAOI,KAAnB,IAOCQ,EAAeN,EAAAA,QAAAA,GAAH,qSAQH,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOa,KAAnB,IACP,SAAAN,GAAC,OAAKA,EAAEO,KAAO,OAAS,QAAvB,IASJC,EAAST,EAAAA,QAAAA,GAAH,inBAOK,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOa,KAAnB,GAEIf,GAoBhBkB,EAAWV,EAAAA,QAAAA,GAAH,sYAcVR,GACM,SAAAS,GAAC,OAAKA,EAAER,KAAO,MAAQ,KAAtB,IACF,SAAAQ,GAAC,OAAKA,EAAEO,KAAO,OAAS,QAAvB,IAGJG,EAAcX,EAAAA,QAAAA,KAAH,qGACb,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOI,KAAnB,IAMCc,EAAYZ,EAAAA,QAAAA,KAAH,mOAWhBa,EAAiB,SAAAZ,GACrB,OAAOA,EAAEa,IAAMb,EAAEN,MAAMD,OAAOG,OAASI,EAAEN,MAAMD,OAAOE,OACvD,EAEYmB,EAASf,EAAAA,QAAAA,OAAH,2cAOR,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOa,KAAnB,GACUM,EAIQA,G,mBC3HjBG,EAAmB,SAAC,GAI1B,IAHLC,EAGI,EAHJA,aACAxC,EAEI,EAFJA,WACAyC,EACI,EADJA,cAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAUJ,EAAaK,OAAS,GAAK7C,EAAW6C,OAAS,EACzDC,GAAWC,EAAAA,EAAAA,GAAS,sBACpBC,GAAqB,OAAIR,GAAcS,MAC3C,SAACC,EAAQC,GAAT,OACE9C,KAAK+C,MAAMD,EAAOE,iBAAmBhD,KAAK+C,MAAMF,EAAOG,gBADzD,IAIF,OACET,IACE,SAACtB,EAAD,WACE,UAACI,EAAD,YACIoB,IACA,4BACE,2BACE,SAACjB,EAAD,oBACA,SAACA,EAAD,oBACA,SAACA,EAAD,CAAcE,MAAI,EAAlB,uBACA,SAACF,EAAD,CAAcE,MAAI,EAAlB,sBACA,SAACF,EAAD,mBACA,SAACA,EAAD,uBACA,SAACA,EAAD,yBAKN,2BACGmB,EAAmBM,KAClB,gBACEC,EADF,EACEA,GACAF,EAFF,EAEEA,gBACArC,EAHF,EAGEA,KACAwC,EAJF,EAIEA,WACAC,EALF,EAKEA,QACAC,EANF,EAMEA,OACAC,EAPF,EAOEA,aAPF,OASE,UAAC3B,EAAD,CAAiBhB,KAAMA,EAAvB,WACE,UAACiB,EAAD,WACGa,IAAY,SAACZ,EAAD,mBACZhC,EAAcmD,OAEjB,UAACpB,EAAD,WACGa,IAAY,SAACZ,EAAD,mBACH,WAATlB,EAAoB,IAAM,QAE7B,UAACiB,EAAD,CAAUF,MAAI,EAAd,UACGe,IAAY,SAACZ,EAAD,uBAEXlC,EAAW4D,MAAK,SAAAC,GAAQ,OAAIA,EAASN,KAAOC,CAApB,IACrBM,SAGP,UAAC7B,EAAD,CAAUF,MAAI,EAAd,UACGe,IAAY,SAACZ,EAAD,uBACb,SAACC,EAAD,UAAYsB,QAEd,UAACxB,EAAD,CAAUjB,KAAMA,EAAhB,UACG8B,IAAY,SAACZ,EAAD,kBACZ6B,KAAKC,IAAIN,GAAQO,QAAQ,OAE5B,UAAChC,EAAD,WACGa,IAAY,SAACZ,EAAD,sBACZyB,EAAaM,QAAQ,OAExB,UAAChC,EAAD,YACE,SAACK,EAAD,CACE,aAAW,OACXtB,KAAK,SACLkD,QAAS,kBACPzB,EAAc,CACZc,GAAAA,EACAF,gBAAAA,EACArC,KAAAA,EACAwC,WAAAA,EACAC,QAAAA,EACAC,OAAAA,GAPK,EAHX,UAcE,SAAC,MAAD,OAEF,SAACpB,EAAD,CACE,aAAW,SACXtB,KAAK,SACLkD,QAAS,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAkBZ,GAAjC,EACTlB,KAAG,EAJL,UAME,SAAC,MAAD,WAnDOkB,EATf,UAuEb,E,oBCvHD,EAA2B,sC,kGCoCda,EAAsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9BrE,GAAasE,EAAAA,EAAAA,IAAYxE,GAC/B,GAA8CyE,EAAAA,EAAAA,UAAS,IAAIlE,MAA3D,eAAOgD,EAAP,KAAwBmB,EAAxB,KACA,GAAoCD,EAAAA,EAAAA,UAAS,IAA7C,eAAOf,EAAP,KAAmBiB,EAAnB,KACM/B,GAAWC,EAAAA,EAAAA,MAEXG,GAAWC,EAAAA,EAAAA,GAAS,sBAEpB2B,EAAmBC,EAAAA,GAAW,CAClCjB,OAAQiB,EAAAA,GACE,8BACPC,SAAS,sBACTC,SAAS,EAAG,sCASjB,GAAkEC,EAAAA,EAAAA,IAAU,CAC1EC,cAAe,CACb/D,MAAM,EACNyC,QAAS,GACTC,OAAQ,IAEVgB,iBAAAA,EACAM,SAAU,YAAgC,IAA7BhE,EAA4B,EAA5BA,KAAMyC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACpBuB,EAAiB,CACrB5B,gBAAAA,EACArC,KAAMA,EAAO,UAAY,SACzBwC,WAAYA,GAER,uCACJC,QAAAA,EACAC,OAAQ1C,GAAQkE,OAAOxB,GAAUwB,OAAOxB,IAE1ChB,GAASyC,EAAAA,EAAAA,IAAeF,IACxBG,IACAf,GACD,IApBKgB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,OAAQJ,EAApD,EAAoDA,UAkCpD,OACE,iCACE,SAAC,KAAD,+BACA,UAAC,KAAD,CAAWJ,SAAUK,EAAcI,aAAa,MAAhD,WACE,UAAC,KAAD,WACGH,EAAOtE,MAAO,SAAC,KAAD,sBAAsB,SAAC,KAAD,sBACrC,SAAC,KAAD,CACEA,KAAK,WACL8C,KAAK,OACL4B,MAAOJ,EAAOtE,KACd2E,SAAUJ,KAEZ,SAAC,KAAD,WACE,SAAC,KAAD,CAAaK,MAAON,EAAOtE,KAA3B,SACIsE,EAAOtE,MAAkB,SAAC,KAAD,KAAX,SAAC,KAAD,QAGlBsE,EAAOtE,MAGP,SAAC,KAAD,uBAFA,SAAC,KAAD,yBAKHsE,EAAOtE,OACN,SAAC,KAAD,CACE8C,KAAK,aACL+B,QAAQC,EAAAA,EAAAA,IAAmBhD,GAC3B6C,SAAU,SAAAI,IAhEG,SAAAvC,GACrBiB,EAAcjB,EAAWkC,MAC1B,CA+DWM,CAAeD,EAChB,EACDE,QAxCRjG,EAAWkG,QAAO,SAACC,EAAKC,GAOtB,MANsB,WAAlBA,EAASpF,MACXmF,EAAIE,KAAK,CACPX,MAAM,GAAD,OAAKU,EAAS7C,IACnB+C,MAAM,GAAD,OAAKF,EAAStC,QAGhBqC,CACR,GAAE,OAmCC,UAAC,KAAD,YACE,4BACE,SAAC,KAAD,CACEnF,KAAK,OACLuF,YAAY,OACZzC,KAAK,SACL4B,MAAOJ,EAAO5B,OACdiC,SAAUJ,EACVX,UAAQ,IAETY,EAAO9B,SAAU,yBAAM8B,EAAO9B,aAGjC,UAAC,KAAD,YACE,SAAC,IAAD,CACE8C,WAAW,WACXC,YAAY,EACZ3C,KAAK,kBACL4B,MAAOrC,EACPsC,SAAU,SAAAI,GA3FpBvB,EA4FuBuB,EA5FCW,GA6Fb,EACDC,WAAY,CAAEC,UAAWf,MAE3B,SAAC,IAAD,WACE,SAAC,MAAD,aAIN,SAAC,KAAD,CACEU,YAAY,UACZzC,KAAK,UACL4B,MAAOJ,EAAO7B,QACdkC,SAAUJ,KAEZ,UAAC,KAAD,YACE,SAAC,KAAD,CAAYvE,KAAK,SAAjB,kBACA,SAAC,IAAD,CAAQA,KAAK,SAASkD,QAASG,EAA/B,wBAIAvB,IACA,SAAC,KAAD,CAAa9B,KAAK,SAASkD,QAASG,EAApC,UACE,SAAC,MAAD,WAMX,E,2DC3KKwC,IAAOtF,EAAAA,EAAAA,SAAOuF,GAAAA,IAAPvF,CAAH,wEAMJwF,GAAYxF,EAAAA,QAAAA,OAAH,0WAsBFyF,GAAoB,SAAC,GAA2B,IAAzB9C,EAAwB,EAAxBA,QAAY+C,GAAY,cAC1D,OACE,SAACF,IAAD,kBAAW7C,QAASA,GAAa+C,GAAjC,cACE,SAACJ,GAAD,MAGL,E,WClCYK,GAAW3F,EAAAA,QAAAA,EAAH,+EACVR,GAKEoG,GAAU5F,EAAAA,QAAAA,SAAH,+kBAQH,SAAAC,GAAC,OAAIA,EAAEN,MAAMS,GAAGC,SAAf,IACD,SAAAJ,GAAC,OAAIA,EAAEN,MAAMkG,WAAWC,GAAvB,IACH,SAAA7F,GAAC,OAAIA,EAAEN,MAAMoG,SAASC,IAArB,IAEH,SAAA/F,GAAC,OAAIA,EAAEN,MAAMsG,YAAY/D,OAAxB,IAGgB,SAAAjC,GAAC,OAAIA,EAAEN,MAAMuG,UAAZ,IAMP,SAAAjG,GAAC,OAAIA,EAAEN,MAAMD,OAAOyG,MAAnB,IAGD,SAAAlG,GAAC,OAAIA,EAAEN,MAAMD,OAAO0G,MAAnB,IAIJ,SAAAnG,GAAC,OAAIA,EAAEN,MAAMD,OAAO0G,MAAnB,ICpBTC,GAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACjC9H,GAAasE,EAAAA,EAAAA,IAAYxE,GACzB4C,GAAWC,EAAAA,EAAAA,MACX+B,EAAmBC,EAAAA,GAAW,CAClCjB,OAAQiB,EAAAA,GACE,8BACPE,SAAS,EAAG,oCACZD,SAAS,wBAEd,GAAuDE,EAAAA,EAAAA,IAAU,CAC/DC,cAAe,CACbtB,QAASoE,EAAYpE,QACrBC,OAAQK,KAAKC,IAAI6D,EAAYnE,SAE/BgB,iBAAAA,EACAM,SAAU,SAAAM,GACR,IAAM5B,EACiB,WAArBmE,EAAY7G,KACRkE,OAAOI,EAAO5B,SACbwB,OAAOI,EAAO5B,QACrBhB,GAASqF,EAAAA,EAAAA,KAAkB,6BAAKF,GAAgBvC,GAAtB,IAA8B5B,OAAAA,MACxDoE,GACD,IAbKzC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,OAAQC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,OAe5C,OACE,iCACE,SAAC,KAAD,gCACA,UAAC,KAAD,CAAWR,SAAUK,EAArB,WACE,SAAC6B,GAAD,CAAUlG,KAAM6G,EAAY7G,KAA5B,SAEIhB,EAAW4D,MAAK,SAAAC,GAAQ,OAAIA,EAASN,KAAOsE,EAAYrE,UAAhC,IACrBM,QAGP,SAAC,KAAD,CACE9C,KAAK,OACLuF,YAAY,OACZzC,KAAK,SACL6B,SAAUJ,EACVG,MAAOJ,EAAO5B,OACdkB,UAAQ,IAETY,EAAO9B,SAAU,yBAAM8B,EAAO9B,UAC/B,SAACyD,GAAD,CACEZ,YAAY,UACZzC,KAAK,UACL6B,SAAUJ,EACVyC,KAAK,IACLtC,MAAOJ,EAAO7B,QALhB,SAOG6B,EAAO7B,WAGV,SAAC,KAAD,CAAYzC,KAAK,SAAjB,qBACA,SAAC,IAAD,CAAQA,KAAK,SAASkD,QAAS4D,EAA/B,qBAGA,SAAC,KAAD,CAAa9G,KAAK,SAASkD,QAAS4D,EAAO,aAAW,QAAtD,UACE,SAAC,MAAD,WAKT,EC9EYxG,GAAUC,EAAAA,QAAAA,IAAH,+P,4CCKP0G,GAAU1G,EAAAA,QAAAA,IAAH,yVAQI,SAAAC,GAAC,OAAIA,EAAEN,MAAMD,OAAOa,KAAnB,IAEV,SAAAN,GAAC,OAAIA,EAAEN,MAAMkG,WAAWC,GAAvB,IASHa,IAAe3G,EAAAA,EAAAA,SAAO0G,GAAP1G,CAAH,+2BAaK4G,GAKEC,GAYFC,GAKEC,IC3DnBC,GAAa,WACxB,OACE,SAACL,GAAD,WACE,SAACD,GAAD,8CAGL,ECuDD,GAjDiB,WACf,OAAsC1D,EAAAA,EAAAA,WAAS,GAA/C,eAAOiE,EAAP,KAAoBC,EAApB,KACA,GAAkDlE,EAAAA,EAAAA,UAAS,MAA3D,eAAOmE,EAAP,KAA0BC,EAA1B,KAEM7F,GAAWC,EAAAA,EAAAA,GAAS,sBACpBP,GAAe8B,EAAAA,EAAAA,IAAYsE,EAAAA,IAC3B5I,GAAasE,EAAAA,EAAAA,IAAYxE,GAQzBuE,EAAU,WACdoE,GAAe,GACfE,EAAqB,KACtB,EAED,OACE,UAAC,GAAD,WACG7F,IAAY,SAAC+F,GAAA,EAAD,MACVrG,EAAaK,OAAS,KAAM,SAAC0F,GAAD,KAC/B,SAAChG,EAAD,CACEC,aAAcA,EACdxC,WAAYA,EACZyC,cAfgB,SAAAoF,GACpBc,EAAqBd,EACtB,KAeG,SAACb,GAAD,CACEhG,KAAK,SACLkD,QAAS,WACPuE,GAAe,EAChB,EAJH,8BAQED,GAAeE,KACf,SAACI,GAAAA,kBAAD,CAAmBC,gBAAiB1E,EAApC,SACGmE,GACC,SAACpE,EAAD,CAAqBC,QAASA,KAE9B,SAACuD,GAAD,CAAWC,YAAaa,EAAmBZ,MAjC9B,WACrBa,EAAqB,KACtB,QAqCF,C","sources":["redux/categories/categoriesSelectors.js","helpers/transformDate.js","components/TransactionTable/TransactionsTable.styled.jsx","components/TransactionTable/TransactionTable.jsx","webpack://wallet-app/./src/components/ModalAddTransaction/ModalAddTransaction.module.css?40ee","components/ModalAddTransaction/ModalAddTransaction.jsx","components/AddTransaction/AddTransactionBtn.jsx","components/EditModal/EditModal.styled.jsx","components/EditModal/EditModal.jsx","pages/HomePage/HomePage.styled.jsx","components/NoTable/NoTable.styled.js","components/NoTable/NoTable.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const selectCategories = state => state.categories.items;\nexport const selectIsLoading = state => state.categories.isLoading;\nexport const selectError = state => state.categories.error;\n","export const transformDate = date => {\n  const dateString = new Date(date);\n  const day = dateString.getDate().toString().padStart(2, '0');\n  const month = (dateString.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateString.getFullYear().toString().slice(2);\n\n  return `${day}.${month}.${year}`;\n};\n\nexport const switchColor = ({ type, theme: { colors } }) => {\n  switch (type) {\n    case 'INCOME':\n      return colors.btGreen;\n    case 'EXPENSE':\n      return colors.btPink;\n    default:\n      return colors.black;\n  }\n};\n","import styled from 'styled-components';\nimport { switchColor } from 'helpers/transformDate';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 320px;\n  overflow: hidden scroll;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 715px;\n    max-height: 80vh;\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.bgGrayRight};\n    border-radius: 2px;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  font-family: ${p => p.theme.ff.familyExo};\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    text-align: center;\n  }\n`;\n\nexport const TableHeading = styled.th`\n  &:first-child {\n    border-radius: 30px 0 0 30px;\n  }\n  &:last-child {\n    border-radius: 0 30px 30px 0;\n  }\n  border: none;\n  background-color: ${p => p.theme.colors.white};\n  text-align: ${p => (p.left ? 'left' : 'center')};\n\n  padding: 16px 10px;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const TrData = styled.tr`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n    background-color: ${p => p.theme.colors.white};\n    border-radius: 10px;\n    border-left: 5px solid ${switchColor};\n  }\n\n  position: relative;\n  font-size: 16px;\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      &::after {\n        content: '';\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        border: 1px solid #dcdcdf;\n        box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n      }\n    }\n  }\n`;\n\nexport const StyledTd = styled.td`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    justify-content: space-between;\n    flex-grow: 1;\n    width: 100%;\n    align-items: center;\n    &:not(:last-child) {\n      border-bottom: 1px solid #dcdcdf;\n    }\n  }\n  padding: 8px 10px;\n  height: 52px;\n  line-height: calc(18 / 16);\n  color: ${switchColor};\n  font-weight: ${p => (p.type ? '700' : '400')};\n  text-align: ${p => (p.left ? 'left' : 'center')};\n`;\n\nexport const DataHeading = styled.span`\n  color: ${p => p.theme.colors.black};\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nexport const DataValue = styled.span`\n  @media screen and (max-width: 767px) {\n    text-align: end;\n  }\n  display: block;\n  white-space: nowrap;\n  max-width: 120px;\n  max-height: 36px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst chooseBtnColor = p => {\n  return p.red ? p.theme.colors.btPink : p.theme.colors.btGreen;\n};\n\nexport const Button = styled.button`\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n  padding: 5px 7px;\n  border: none;\n  border-radius: 6px;\n  color: ${p => p.theme.colors.white};\n  background-color: ${chooseBtnColor};\n  transition: box-shadow 250ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover,\n  &:focus {\n    box-shadow: 0px 2px 6px ${chooseBtnColor};\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import { useMedia } from 'react-use';\nimport { useDispatch } from 'react-redux';\nimport { MdDelete, MdEdit } from 'react-icons/md';\nimport {\n  Table,\n  TableHeading,\n  TrData,\n  StyledTd,\n  DataHeading,\n  DataValue,\n  Wrapper,\n  Button,\n} from './TransactionsTable.styled';\nimport { transformDate } from 'helpers/transformDate';\nimport { deleteTransaction } from 'redux/transactions/transactionOperation';\n\nexport const TransactionTable = ({\n  transactions,\n  categories,\n  openEditModal,\n}) => {\n  const dispatch = useDispatch();\n  const isShown = transactions.length > 0 && categories.length > 0;\n  const isMobile = useMedia('(max-width: 767px)');\n  const sortedTransactions = [...transactions].sort(\n    (prevTr, nextTr) =>\n      Date.parse(nextTr.transactionDate) - Date.parse(prevTr.transactionDate)\n  );\n\n  return (\n    isShown && (\n      <Wrapper>\n        <Table>\n          {!isMobile && (\n            <thead>\n              <tr>\n                <TableHeading>Date</TableHeading>\n                <TableHeading>Type</TableHeading>\n                <TableHeading left>Category</TableHeading>\n                <TableHeading left>Comment</TableHeading>\n                <TableHeading>Sum</TableHeading>\n                <TableHeading>Balance</TableHeading>\n                <TableHeading>Edit</TableHeading>\n              </tr>\n            </thead>\n          )}\n\n          <tbody>\n            {sortedTransactions.map(\n              ({\n                id,\n                transactionDate,\n                type,\n                categoryId,\n                comment,\n                amount,\n                balanceAfter,\n              }) => (\n                <TrData key={id} type={type}>\n                  <StyledTd>\n                    {isMobile && <DataHeading>Date</DataHeading>}\n                    {transformDate(transactionDate)}\n                  </StyledTd>\n                  <StyledTd>\n                    {isMobile && <DataHeading>Type</DataHeading>}\n                    {type === 'INCOME' ? '+' : '-'}\n                  </StyledTd>\n                  <StyledTd left>\n                    {isMobile && <DataHeading>Category</DataHeading>}\n                    {\n                      categories.find(category => category.id === categoryId)\n                        .name\n                    }\n                  </StyledTd>\n                  <StyledTd left>\n                    {isMobile && <DataHeading>Comment</DataHeading>}\n                    <DataValue>{comment}</DataValue>\n                  </StyledTd>\n                  <StyledTd type={type}>\n                    {isMobile && <DataHeading>Sum</DataHeading>}\n                    {Math.abs(amount).toFixed(2)}\n                  </StyledTd>\n                  <StyledTd>\n                    {isMobile && <DataHeading>Balance</DataHeading>}\n                    {balanceAfter.toFixed(2)}\n                  </StyledTd>\n                  <StyledTd>\n                    <Button\n                      aria-label=\"Edit\"\n                      type=\"button\"\n                      onClick={() =>\n                        openEditModal({\n                          id,\n                          transactionDate,\n                          type,\n                          categoryId,\n                          comment,\n                          amount,\n                        })\n                      }\n                    >\n                      <MdEdit />\n                    </Button>\n                    <Button\n                      aria-label=\"delete\"\n                      type=\"button\"\n                      onClick={() => dispatch(deleteTransaction(id))}\n                      red\n                    >\n                      <MdDelete />\n                    </Button>\n                  </StyledTd>\n                </TrData>\n              )\n            )}\n          </tbody>\n        </Table>\n      </Wrapper>\n    )\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dateTime\":\"ModalAddTransaction_dateTime__C-03b\"};","import { GrClose } from 'react-icons/gr';\nimport { BsCalendar4Week } from 'react-icons/bs'; //BsBorder;\nimport styles from '../ModalAddTransaction/ModalAddTransaction.module.css';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\nimport { useState } from 'react';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { addTransaction } from 'redux/transactions/transactionOperation';\nimport { Button } from 'components/Button/Button';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport {\n  ModalTitle,\n  ModalForm,\n  InputCheckBox,\n  TypeLabel,\n  CheckBox,\n  CheckButton,\n  Plus,\n  Minus,\n  Span,\n  SpanIncome,\n  SpanExpense,\n  DivSumm,\n  Amount,\n  DateInput,\n  Calendar,\n  Comment,\n  ButtonCard,\n  CloseButton,\n  customStylesSelect,\n} from './ModalAddTransaction.styled';\nimport Select from 'react-select';\nimport { FormButton } from 'components/Forms/Forms.styled';\nimport { useMedia } from 'react-use';\n\nexport const ModalAddTransaction = ({ onClose }) => {\n  const categories = useSelector(selectCategories);\n  const [transactionDate, setTransactionDate] = useState(new Date());\n  const [categoryId, setCategoryId] = useState('');\n  const dispatch = useDispatch();\n\n  const isMobile = useMedia('(max-width: 767px)');\n\n  const validationSchema = yup.object({\n    amount: yup\n      .number('Please, enter only numbers')\n      .required('Amount is required')\n      .moreThan(0, 'Please, enter number more than 0'),\n  });\n\n  const changeDate = date => {\n    setTransactionDate(date._d);\n  };\n  const changeCategory = categoryId => {\n    setCategoryId(categoryId.value);\n  };\n  const { handleSubmit, values, handleChange, errors, resetForm } = useFormik({\n    initialValues: {\n      type: false,\n      comment: '',\n      amount: '',\n    },\n    validationSchema,\n    onSubmit: ({ type, comment, amount }) => {\n      const newTransaction = {\n        transactionDate,\n        type: type ? 'EXPENSE' : 'INCOME',\n        categoryId: categoryId\n          ? categoryId\n          : '063f1132-ba5d-42b4-951d-44011ca46262',\n        comment,\n        amount: type ? -Number(amount) : Number(amount),\n      };\n      dispatch(addTransaction(newTransaction));\n      resetForm();\n      onClose();\n    },\n  });\n\n  const selectOption = () =>\n    categories.reduce((acc, categori) => {\n      if (categori.type !== 'INCOME') {\n        acc.push({\n          value: `${categori.id}`,\n          label: `${categori.name}`,\n        });\n      }\n      return acc;\n    }, []);\n\n  return (\n    <>\n      <ModalTitle>Add transaction</ModalTitle>\n      <ModalForm onSubmit={handleSubmit} autoComplete=\"off\">\n        <TypeLabel>\n          {values.type ? <Span>Income</Span> : <SpanIncome>Income</SpanIncome>}\n          <InputCheckBox\n            type=\"checkbox\"\n            name=\"type\"\n            value={values.type}\n            onChange={handleChange}\n          />\n          <CheckBox>\n            <CheckButton props={values.type}>\n              {!values.type ? <Plus /> : <Minus />}\n            </CheckButton>\n          </CheckBox>\n          {!values.type ? (\n            <Span>Expense</Span>\n          ) : (\n            <SpanExpense>Expense</SpanExpense>\n          )}\n        </TypeLabel>\n        {values.type && (\n          <Select\n            name=\"categoryId\"\n            styles={customStylesSelect(isMobile)}\n            onChange={evt => {\n              changeCategory(evt);\n            }}\n            options={selectOption()}\n          ></Select>\n        )}\n        <DivSumm>\n          <div>\n            <Amount\n              type=\"text\"\n              placeholder=\"0.00\"\n              name=\"amount\"\n              value={values.amount}\n              onChange={handleChange}\n              required\n            />\n            {errors.amount && <div>{errors.amount}</div>}\n          </div>\n\n          <DateInput>\n            <Datetime\n              dateFormat=\"DD.MM.YY\"\n              timeFormat={false}\n              name=\"transactionDate\"\n              value={transactionDate}\n              onChange={evt => {\n                changeDate(evt);\n              }}\n              inputProps={{ className: styles.dateTime }}\n            />\n            <Calendar>\n              <BsCalendar4Week />\n            </Calendar>\n          </DateInput>\n        </DivSumm>\n        <Comment\n          placeholder=\"Comment\"\n          name=\"comment\"\n          value={values.comment}\n          onChange={handleChange}\n        />\n        <ButtonCard>\n          <FormButton type=\"submit\">ADD</FormButton>\n          <Button type=\"button\" onClick={onClose}>\n            CANCEL\n          </Button>\n        </ButtonCard>\n        {!isMobile && (\n          <CloseButton type=\"button\" onClick={onClose}>\n            <GrClose />\n          </CloseButton>\n        )}\n      </ModalForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { AiOutlinePlus } from 'react-icons/ai';\n\nconst Icon = styled(AiOutlinePlus)`\n  width: 20px;\n  height: 20px;\n  fill: #fff;\n`;\n\nconst StyledBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n\n  position: fixed;\n  right: 40px;\n  bottom: 40px;\n  width: 44px;\n  height: 44px;\n\n  background: #24cca7;\n\n  box-shadow: 0px 6px 15px rgba(36, 204, 167, 0.5);\n\n  @media (max-width: 768px) {\n    right: 20px;\n    bottom: 20px;\n  }\n`;\n\nexport const AddTransactionBtn = ({ onClick, ...attrs }) => {\n  return (\n    <StyledBtn onClick={onClick} {...attrs}>\n      <Icon />\n    </StyledBtn>\n  );\n};\n","import styled from 'styled-components';\nimport { switchColor } from 'helpers/transformDate';\n\nexport const Category = styled.p`\n  color: ${switchColor};\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const Comment = styled.textarea`\n  resize: none;\n  width: 280px;\n  border: 0;\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n\n  font-family: ${p => p.theme.ff.familyExo};\n  font-weight: ${p => p.theme.fontWeight.fw4};\n  font-size: ${p => p.theme.fontSize.fs18};\n  line-height: 1.5;\n  outline: ${p => p.theme.borderColor.comment};\n  outline-offset: 2px;\n  border-radius: 2px;\n  transition: outline-color ${p => p.theme.transition};\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n    background-color: ${p => p.theme.colors.bgGray};\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: ${p => p.theme.colors.lGreen};\n    border-radius: 2px;\n  }\n  &:focus {\n    outline-color: ${p => p.theme.colors.lGreen};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { GrClose } from 'react-icons/gr';\nimport * as yup from 'yup';\nimport {\n  CloseButton,\n  ModalForm,\n  ModalTitle,\n  Amount,\n} from 'components/ModalAddTransaction/ModalAddTransaction.styled';\n\nimport { updateTransaction } from 'redux/transactions/transactionOperation';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { Comment, Category } from './EditModal.styled';\nimport { FormButton } from 'components/Forms/Forms.styled';\nimport { Button } from 'components/Button/Button';\n\nexport const EditModal = ({ transaction, close }) => {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const validationSchema = yup.object({\n    amount: yup\n      .number('Please, enter only numbers')\n      .moreThan(0, 'Please, enter number more than 0')\n      .required('Amount is required'),\n  });\n  const { handleSubmit, values, handleChange, errors } = useFormik({\n    initialValues: {\n      comment: transaction.comment,\n      amount: Math.abs(transaction.amount),\n    },\n    validationSchema,\n    onSubmit: values => {\n      const amount =\n        transaction.type === 'INCOME'\n          ? Number(values.amount)\n          : -Number(values.amount);\n      dispatch(updateTransaction({ ...transaction, ...values, amount }));\n      close();\n    },\n  });\n  return (\n    <>\n      <ModalTitle>Edit transaction</ModalTitle>\n      <ModalForm onSubmit={handleSubmit}>\n        <Category type={transaction.type}>\n          {\n            categories.find(category => category.id === transaction.categoryId)\n              .name\n          }\n        </Category>\n        <Amount\n          type=\"text\"\n          placeholder=\"0.00\"\n          name=\"amount\"\n          onChange={handleChange}\n          value={values.amount}\n          required\n        />\n        {errors.amount && <div>{errors.amount}</div>}\n        <Comment\n          placeholder=\"Comment\"\n          name=\"comment\"\n          onChange={handleChange}\n          rows=\"3\"\n          value={values.comment}\n        >\n          {values.comment}\n        </Comment>\n\n        <FormButton type=\"submit\">UPDATE</FormButton>\n        <Button type=\"button\" onClick={close}>\n          Cancel\n        </Button>\n        <CloseButton type=\"button\" onClick={close} aria-label=\"close\">\n          <GrClose />\n        </CloseButton>\n      </ModalForm>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding-top: 128px;\n  @media screen and (min-width: 768px) {\n    padding-top: 10px;\n  }\n  @media screen and (min-width: 1080px) {\n    padding-top: 46px;\n    padding-left: 69px;\n    flex-shrink: 0;\n    flex-grow: 1;\n  }\n`;\n","import styled from 'styled-components';\nimport loginBgImgTab from '../../images/background/loginBgImgTab.png';\nimport loginBgImgTabLarge from '../../images/background/loginBgImgTab@2x.png';\nimport loginBgImgDesk from '../../images/background/loginBgImgDesk.png';\nimport loginBgImgDeskLarge from '../../images/background/loginBgImgDesk@2x.png';\n\n\nexport const NoTable = styled.div`\n\n  /* @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n\n    background-color: ${p => p.theme.colors.white};\n  } */\nfont-weight: ${p => p.theme.fontWeight.fw4};\n  padding-bottom: 18px;\n  padding-left: 5px;\n\n  @media screen and (max-width: 767px) {\n    display: none;\n    }\n`;\n\nexport const NoTableSized = styled(NoTable)`\n\n  @media screen and (min-width: 768px) {\n    ::after {\n      content: '';\n      display: block;\n      width: 260px;\n      height: 250px;\n\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n\n      background-image: url(${loginBgImgTab});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgTabLarge});\n      }\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    ::after {\n      top: 150px;\n      left: 76px;\n      width: 435px;\n      height: 420px;\n\n      background-image: url(${loginBgImgDesk});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgDeskLarge});\n      }\n    }\n  }\n`;\n","import { NoTable, NoTableSized } from './NoTable.styled';\n\nexport const NoTableImg = () => {\n  return (\n    <NoTableSized>\n      <NoTable>Welcome in Wallet. Enjoyed it.</NoTable>\n    </NoTableSized>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectTransaction } from 'redux/transactions/transactionSelectors';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\nimport { TransactionTable } from 'components/TransactionTable/TransactionTable';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\nimport { useState } from 'react';\nimport { useMedia } from 'react-use';\nimport { Balance } from 'components/Balance/Balance';\nimport { AddTransactionBtn } from 'components/AddTransaction/AddTransactionBtn';\nimport { ModalWindowWraper } from 'components/ModalWindowWraper/ModalWindowWraper';\nimport { EditModal } from 'components/EditModal/EditModal';\nimport { Wrapper } from './HomePage.styled';\nimport { NoTableImg } from 'components/NoTable/NoTable';\n\nconst HomePage = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [transactionToEdit, setTransactionToEdit] = useState(null);\n\n  const isMobile = useMedia('(max-width: 767px)');\n  const transactions = useSelector(selectTransaction);\n  const categories = useSelector(selectCategories);\n\n  const closeEditModal = () => {\n    setTransactionToEdit(null);\n  };\n  const openEditModal = transaction => {\n    setTransactionToEdit(transaction);\n  };\n  const onClose = () => {\n    setModalIsOpen(false);\n    setTransactionToEdit(null);\n  };\n\n  return (\n    <Wrapper>\n      {isMobile && <Balance />}\n      {!(transactions.length > 0) && <NoTableImg />}\n      <TransactionTable\n        transactions={transactions}\n        categories={categories}\n        openEditModal={openEditModal}\n      />\n      <AddTransactionBtn\n        type=\"button\"\n        onClick={() => {\n          setModalIsOpen(true);\n        }}\n      >\n        add transaction\n      </AddTransactionBtn>\n      {(modalIsOpen || transactionToEdit) && (\n        <ModalWindowWraper clickOnBackdrop={onClose}>\n          {modalIsOpen ? (\n            <ModalAddTransaction onClose={onClose} />\n          ) : (\n            <EditModal transaction={transactionToEdit} close={closeEditModal} />\n          )}\n        </ModalWindowWraper>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectCategories","state","categories","items","transformDate","date","dateString","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","switchColor","type","colors","theme","btGreen","btPink","black","Wrapper","styled","p","bgGrayRight","Table","ff","familyExo","TableHeading","white","left","TrData","StyledTd","DataHeading","DataValue","chooseBtnColor","red","Button","TransactionTable","transactions","openEditModal","dispatch","useDispatch","isShown","length","isMobile","useMedia","sortedTransactions","sort","prevTr","nextTr","parse","transactionDate","map","id","categoryId","comment","amount","balanceAfter","find","category","name","Math","abs","toFixed","onClick","deleteTransaction","ModalAddTransaction","onClose","useSelector","useState","setTransactionDate","setCategoryId","validationSchema","yup","required","moreThan","useFormik","initialValues","onSubmit","newTransaction","Number","addTransaction","resetForm","handleSubmit","values","handleChange","errors","autoComplete","value","onChange","props","styles","customStylesSelect","evt","changeCategory","options","reduce","acc","categori","push","label","placeholder","dateFormat","timeFormat","_d","inputProps","className","Icon","AiOutlinePlus","StyledBtn","AddTransactionBtn","attrs","Category","Comment","fontWeight","fw4","fontSize","fs18","borderColor","transition","bgGray","lGreen","EditModal","transaction","close","updateTransaction","rows","NoTable","NoTableSized","loginBgImgTab","loginBgImgTabLarge","loginBgImgDesk","loginBgImgDeskLarge","NoTableImg","modalIsOpen","setModalIsOpen","transactionToEdit","setTransactionToEdit","selectTransaction","Balance","ModalWindowWraper","clickOnBackdrop"],"sourceRoot":""}